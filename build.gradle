buildscript {
    ext {
        springBootVersion = '1.5.19.RELEASE'
        name = 'Spotify Synchronizer'
    }

    repositories {
        mavenLocal()
        maven { url 'http://repo.spring.io/plugins-release' }
        mavenCentral()
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE"
        classpath 'io.spring.gradle:propdeps-plugin:0.0.10.RELEASE'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    }

}

apply from: "$rootDir/gradle/versioning.gradle"

task wrapper(type: Wrapper) {
    description = 'Generates gradlew scripts for unix and windows environments'
    gradleVersion = '3.4'
}

configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'
    apply plugin: 'org.springframework.boot'
}

allprojects {
    defaultTasks 'clean', 'build'

    afterEvaluate {
        tasks.withType(Test).each { testTask ->
            testTask.doFirst {
                reports.junitXml.destination = "$buildDir/junit-xml"
            }
        }
    }

    springBoot {
        mainClass = "be.studios.yoep.spotify.synchronizer.SpotifySynchronizer"
        executable = true
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    group = "be.studios.yoep.spotify.synchronizer"

    apply plugin: 'java'
    apply plugin: "io.spring.dependency-management"
    apply from: "$rootDir/gradle/code-quality.gradle"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << '-Xlint:unchecked'
            options.encoding = 'UTF-8'
        }
    }

    configurations.all {
        resolutionStrategy.failOnVersionConflict()
    }

    test {
        testLogging {
            events 'passed', 'skipped', 'failed'
        }
        maxParallelForks 2
        jvmArgs = ['-Xmx512m']
    }

    jar {
        manifest {
            attributes 'Implementation-Title': "$project.name"
            attributes 'Implementation-Version': "$project.version"
        }
    }

    dependencies {
        testCompile 'junit:junit:4.12'
        testCompile 'org.mockito:mockito-core'
        testCompile 'org.assertj:assertj-core'
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:$springBootVersion")

            dependencies {
                dependency 'org.projectlombok:lombok:1.16.20'
                dependency 'com.jayway.restassured:rest-assured:2.9.0'
                dependency 'com.google.guava:guava:21.0'
                dependency 'org.apache.commons:commons-lang3:3.4'
                dependency 'org.objenesis:objenesis:2.6'
            }
        }
    }
}

